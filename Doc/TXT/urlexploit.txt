 Ataque DDos usando T50
 ======================
T50 Experimental Packet Injector Tool

T50 Experimental Packet Injector Tool

Referencia rápida pra utilizar o T50:
ex:01
./t50 200.16.2.X --flood --turbo --dport (80 443) -S --protocol TCP

Neste procedimento floodar o ip, adicionar o modo turbo, atacar as portas 80 e 443, usando somente SYN nos protocolo TCP.

ex:02
./t50 200.16.2.X --flood --turbo --dport (80) -S -s 200.16.2.Y --protocol TCP

Neste procedimento floodar o ip, adiciona o modo turbo, atacar somente a porta 80 usando SYN e mascarando  seu ip com 200.16.2.Y no protocolo TCP

--protocol TCP
Faz um randômico de todos os protocolos

--sport 80 --dport 443
Ataca através da porta de origem 80 no alvo 443


Utilizando o programa de monitoramento de rede Wireshark podemos observar os pacotes sendo enviados

Quanto mais detalhado o processo de ataque mais rápido seu algo vai á lona.

Baixar:http://t50.sourceforge.net/ 

-=-=-=-=-

 URL Inspect verifique suas url se estão OFF ou ON
 =================================================
URL Inspect verifique suas url se estão OFF ou ON


Muitas vezes possuímos aquela lista enorme de sites vull mas muitos deles estão off.
O seguinte testador faz isso para você.
Uso:
Dando permissão: chmod +x url_inspect.sh ./url_inspect.sh

./Script.sh  arquivo_com_url  /pasta_dow_resultados

Resultado:

cleiton@drone:~/pentest/urlinspetor$ ./url_inspect.sh rfi_urls.txt evidence/
[*] Checking URL status
-{ ERR }- http://img.youtube.com.ignorelist.com:55000/.google/byroe.php
-{ ERR }- http://img.youtube.com.ignorelist.com:55000/.google/wpengine.php
-{ 404 }- http://picasa.combo.opsetconsulting.com/byroe.php
-{ ERR }- http://blogger.com.autismactivism.org/get.php
-{ 404 }- http://blogger.com.herzelconsultores.com.ar/shell.php
-{ ERR }- http://blogger.com.mesco.com.vn/login.php
-{ 404 }- http://blogger.com.nilgirisrealty.com/cok.php
-{ 200 }- http://blogger.com.omahastorm.org/jek.php
-{ 200 }- http://blogger.com.pinkfc.com/thumb/id.php

[*] 'Alive' links will be downloaded for further inspection

BAIXAR http://www.inurl.com.br/url_inspect.sh

-=-=-=-=-=

 WeBaCoo (Web Backdoor Cookie)
 =============================
 
WeBaCoo (Web Backdoor Cookie)


WeBaCoo (Web Backdoor Cookie) é um backdoor script web-kit, com o objetivo de fornecer uma discrição conexão terminal como sobre HTTP entre cliente e servidor web. É uma ferramenta de exploração post para manter o acesso a um servidor web comprometido.

WeBaCoo foi projetado para operar sob o radar de moderno up-to-datado AV, NIDS, IPS, firewalls de rede e firewalls de aplicativos, provando um mecanismo de cautela para executar comandos no servidor comprometido. A comunicação é feita usando ofuscado campos de cabeçalho HTTP do biscoito de pedidos do cliente válido e respostas HTTP servidor web parente.

O script kit tem dois modos de operação principais: Geração e "Terminal". Usando o modo de geração, o usuário pode criar o código backdoor contendo as cargas PHP. Por outro lado, no modo "terminal" remoto o cliente pode ligar para o servidor comprometido onde o código PHP backdoor foi injetado. A fim de estabelecer o controle remoto "pseudo"-Shell, o usuário deve fornecer o caminho do servidor URL contendo o código injetado.

WeBaCoo é escrito em Perl sob licença GPLv3 e está hospedado no Github. Você pode baixar WeBaCoo por clonagem do repositório:






Baixar:

git clone git://github.com/anestisb/WeBaCoo.git

ou download direto 

https://github.com/anestisb/WeBaCoo/zipball/master
http://bechtsoudis.com/data/tools/webacoo-latest.tar.gz

-=-=-=-=-=-=-

 Usando ferramenta SQLMap com o Tor
A Injeção de SQL, mais conhecida através do termo americano SQL Injection, é um tipo de ameaça de segurança que se aproveita de falhas em sistemas que interagem com bases de dados via SQL. A injeção de SQL ocorre quando o atacante consegue inserir uma série de instruções SQL dentro de uma consulta (query) através da manipulação das entradas de dados de uma aplicação. A alguns anos atrás quando essa ameaça foi descoberta, a forma de injeção era "na unha", digamos assim. O pentester tinha que inserir os códigos manualmente, demorando muito tempo para concluir o ataque. Foi então que começaram a desenvolver programas que automatizados. Hoje em dia talvez o mais conhecido desses programas seja o SQLMap. O SQLMap é um programa de teste de penetração de código aberto, escrito em Python. Ele tem suporte total aos sistemas de banco de dados: MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird, Sybase and SAP MaxDB. Também tem suporte a 6 tipos de técnicas SQL Injection. O foco desse post hoje é mostrar pra vocês como usar o SQLMap junto com o Tor, para proteção do IP, DNS, etc. No seu linux, digite no terminal:

    A Injeção de SQL, mais conhecida através do termo americano SQL Injection, é um tipo de ameaça de segurança que se aproveita de falhas em sistemas que interagem com bases de dados via SQL. A injeção de SQL ocorre quando o atacante consegue inserir uma série de instruções SQL dentro de uma consulta (query) através da manipulação das entradas de dados de uma aplicação.

A alguns anos atrás quando essa ameaça foi descoberta, a forma de injeção era "na unha", digamos assim. O pentester tinha que inserir os códigos manualmente, demorando muito tempo para concluir o ataque. Foi então que começaram a desenvolver programas que automatizados. Hoje em dia talvez o mais conhecido desses programas seja o SQLMap. O SQLMap é um programa de teste de penetração de código aberto, escrito em Python. Ele tem suporte total aos sistemas de banco de dados:Também tem suporte a 6 tipos de técnicas SQL Injection. MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird, Sybase and SAP MaxDB.

O foco desse post hoje é mostrar pra vocês como usar o SQLMap junto com o Tor, para proteção do IP, DNS, etc. No seu linux, digite no terminal:

$ sudo apt-get install tor tor-geoip

Depois disso, entre na pasta o SQLMap e digite:

./sqlmap.py -u "http://www.seusitevulneravel.com/index.php?cata_id=1" -b -a –tor --check-tor--user-agent="Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"

O argumento --tor chama o Tor para ser usado e o --check-tor verifica se o Tor está sendo usado corretamente, caso não esteja, você vai receber uma mensagem de erro em vermelho no terminal. E o User Agent é do googlebot, todos os seus requests no site vão parecer como se fosse o bot do Google fazendo uma visitinha. :)

Por hoje é só, pessoal.

Abraços!

-=-=-=-=-=-=-=

 Gerando senhas seguras com linux.
Gerando senhas seguras com linux.

Gerando senhas com linux

Instalando:
$sudo apt-get install makepasswd

Uso:
cleiton@drone:~$ makepasswd -char=10 -count=10

"-char=10" = Quantidade de caracteres da senha.
"-count=10" = Quantidade de senhas geradas.

EX:cleiton@drone:~$ makepasswd -char=10 -count=6
XDfXSyBxvj
yPgR3CTw1u
08Eh5Knxr4
FuYRHjWoDx
be3um05UiX
3nBEdocIY8


-=-=-=-=-=-=-=-=

